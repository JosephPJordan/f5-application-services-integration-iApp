{
	"variables": [],
	"info": {
		"name": "iWf_Operational_Workflows",
		"_postman_id": "b8d0195a-a5c3-57e0-0bcb-0cfa0d02ab64",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "1A_Discover_BIGIP",
			"description": "Discover an F5 BIG-IP Device on iWorkflow\n\nInput Variables:\nbigip_mgmt\t\t\t\tBIG-IP Management Address\nbigip_root_username\t\tRoot Username\nbigip_root_password\t\tRoot Password\nbigip_admin_username\tAdmin Username\nbigip_admin_password\tAdmin Password\n\nOutput Variables:\niwf_bigip_uuid\tUUID of the discovered device",
			"item": [
				{
					"name": "Discover BIG-IP on iWorkflow",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var populate_vars = [",
									"        { ",
									"            \"name\":\"iwf_bigip_uuid\",",
									"            \"value\":\"uuid\"",
									"        }",
									"    ];",
									"",
									"f5_populate_env_vars(populate_vars);"
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/mgmt/shared/resolver/device-groups/cm-cloud-managed-devices/devices",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"address\":\"{{bigip_mgmt}}\",\n    \"automaticallyUpdateFramework\":true,\n    \"properties\": {\n        \"isRestProxyEnabled\":true,\n        \"isSoapProxyEnabled\":true, \n        \"isTmshProxyEnabled\":false,\n        \"dmaConfigPathScope\":\"basic\"\n    },\n    \"rootUser\":\"{{bigip_root_username}}\",\n    \"rootPassword\":\"{{bigip_root_password}}\",\n    \"userName\":\"{{bigip_admin_username}}\",\n    \"password\":\"{{bigip_admin_password}}\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get BIG-IP Discovery Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"f5_enable_poller();",
									"",
									"var check_vals = [",
									"    {",
									"        \"path\":\"state\",",
									"        \"value\":\"ACTIVE\"",
									"    }",
									"    ];",
									"",
									"f5_check_response(check_vals);",
									"f5_poll_until_all_tests_pass(\"\");",
									""
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/mgmt/shared/resolver/device-groups/cm-cloud-managed-devices/devices/{{iwf_bigip_uuid}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Wait for attribute state to be ACTIVE"
					},
					"response": []
				},
				{
					"name": "_F5_POLL_DELAY",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"f5_poll_next();",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{_f5_poll_apiurl}}/{{_f5_poll_wait}}",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "1B_Get_BIGIP_UUID",
			"description": "Resolve the UUID of a BIG-IP device discovered on iWorkflow by the Management IP or Hostname\n\nInput Variables:\nbigip_mgmt\t\tManagement IP to search for\nbigip_hostname\tHostname to search for\n\nOutput Variables:\niwf_bigip_uuid\tUUID of the device",
			"item": [
				{
					"name": "Get BIG-IP UUID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var populate_vars = [",
									"    {",
									"        \"name\":\"iwf_bigip_uuid\",",
									"        \"value\":\"items.0.uuid\"",
									"    }]",
									"    ",
									"f5_populate_env_vars(populate_vars);"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// Build filter",
									"var filter = [];",
									"",
									"if(typeof environment.bigip_mgmt !== 'undefined' && environment.bigip_mgmt.length > 0) {",
									"    filter.push(\"(managementAddress eq '\" + environment.bigip_mgmt + \"')\");",
									"}",
									"",
									"if(typeof environment.bigip_hostname !== 'undefined' && environment.bigip_hostname.length > 0) {",
									"    filter.push(\"(hostname eq '\" + environment.bigip_hostname + \"')\");",
									"}",
									"",
									"postman.setEnvironmentVariable(\"_rt_filter\", filter.join(\" or \"));",
									""
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/mgmt/shared/resolver/device-groups/cm-cloud-managed-devices/devices?$filter={{_rt_filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "1C_Delete_BIGIP",
			"description": "Remove a discovered BIG-IP device from iWorkflow\n\nInput Variables:\niwf_bigip_uuid\t\tUUID of the discoverd BIG-IP device\n\n",
			"item": [
				{
					"name": "Remove  BIG-IP from iWorkflow",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"uuid\",",
									"            \"value\":environment.iwf_bigip_uuid",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);"
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/mgmt/shared/resolver/device-groups/cm-cloud-managed-devices/devices/{{iwf_bigip_uuid}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "2A_Create_BIGIP_Connector",
			"description": "Create a BIG-IP Connector\n\nInput Variables:\niwf_connector_name\t\t\tConnector Name\niwf_connector_description\tConnector Description\niwf_bigip_<x>_uuid\t\t\t[OPTIONAL] BIGIP UUID to assign\n\nOutput Variables:\niwf_connector_uuid\t\t\tUUID of the created connector",
			"item": [
				{
					"name": "Create a BIG-IP Connector",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var populate_vars = [",
									"        { ",
									"            \"name\":\"iwf_connector_uuid\",",
									"            \"value\":\"connectorId\"",
									"        }",
									"    ];",
									"",
									"f5_populate_env_vars(populate_vars);",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var uuids = [];",
									"Object.keys(environment).forEach(function(v) {",
									"    if(v.match(/iwf_bigip_.*_uuid/)) {",
									"        uuids.push({\"link\":\"https://localhost/mgmt/shared/resolver/device-groups/cm-cloud-managed-devices/devices/\" + environment[v]});",
									"    }",
									"    if(v.match(/iwf_bigip_uuid/)) {",
									"        uuids.push({\"link\":\"https://localhost/mgmt/shared/resolver/device-groups/cm-cloud-managed-devices/devices/\" + environment[v]});",
									"    }",
									"});",
									"",
									"postman.setEnvironmentVariable(\"_rt_connector_devices\", JSON.stringify(uuids));",
									""
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/mgmt/cm/cloud/connectors/local",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"{{iwf_connector_name}}\",\n    \"description\":\"{{iwf_connector_description}}\",\n    \"parameters\":[],\n    \"deviceReferences\": {{_rt_connector_devices}}\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "2B_Get_BIGIP_Connector_UUID",
			"description": "",
			"item": [
				{
					"name": "Get BIG-IP connector UUID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var populate_vars = [",
									"        { ",
									"            \"name\":\"iwf_connector_uuid\",",
									"            \"value\":\"items.0.connectorId\"",
									"        }",
									"    ];",
									"",
									"f5_populate_env_vars(populate_vars);"
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/mgmt/cm/cloud/connectors/local?filter=(name eq {{iwf_connector_name}})",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "2C_Delete_BIGIP_Connector",
			"description": "Delete a BIG-IP Connector using the Connector UUID\n\nInput Variables:\niwf_connector_uuid\t\tConnector UUID\n\nOutput Variables:\n",
			"item": [
				{
					"name": "Delete a BIG-IP Connector",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"connectorId\",",
									"            \"value\":environment.iwf_connector_uuid",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);"
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/mgmt/cm/cloud/connectors/local/{{iwf_connector_uuid}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "3A_Create_Tenant",
			"description": "Create an iWorkflow Tenant\n\nInput Variables:\niwf_tenant_name\t\t\tTenant Name\niwf_tenant_description\tTenant Description\niwf_connector_uuid*\t\tConnector reference(s)\n\nOutput Variables:\niwf_tenant_roleref\t\tTenant RBAC Role Reference\n",
			"item": [
				{
					"name": "Create iWorkflow Tenant",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var fixup_ref = function(resp) {",
									"    return resp.roleReference.link.replace('https://localhost','');",
									"}",
									"",
									"var populate_vars = [",
									"        { ",
									"            \"name\":\"iwf_tenant_roleref\",",
									"            \"value\":fixup_ref",
									"        }",
									"    ];",
									"",
									"f5_populate_env_vars(populate_vars);",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var uuids = [];",
									"Object.keys(environment).forEach(function(v) {",
									"    if(v.match(/iwf_connector_uuid.*/)) {",
									"        uuids.push({\"link\":\"https://localhost/mgmt/cm/cloud/connectors/local/\" + environment[v]});",
									"    }",
									"});",
									"",
									"postman.setEnvironmentVariable(\"_rt_tenant_connectors\", JSON.stringify(uuids));",
									""
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/mgmt/cm/cloud/tenants",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{iwf_tenant_name}}\",\n\t\"cloudConnectorReferences\": {{_rt_tenant_connectors}},\n\t\"description\": \"{{iwf_tenant_description}}\",\n\t\"addressContact\": \"\",\n\t\"phone\": \"\",\n\t\"email\": \"\"\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "3B_Get_Tenants",
			"description": "",
			"item": [
				{
					"name": "Get Tenants",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"f5_check_response();"
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/mgmt/cm/cloud/tenants",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "3C_Delete_Tenant",
			"description": "Delete an iWorkflow Tenant\n\nInput Variables:\niwf_tenant_name\t\t\tTenant Name\n\nOutput Variables:\n",
			"item": [
				{
					"name": "Delete iWorkflow Tenant",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"name\",",
									"            \"value\":environment.iwf_tenant_name",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);"
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/mgmt/cm/cloud/tenants/{{iwf_tenant_name}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "4A_Create_Tenant_User",
			"description": "Create a user associated with a iWorkflow tenant\n\nInput Variables:\niwf_tenant_name\t\tTenant Name\niwf_tenant_roleref\tTenant RBAC Role Reference\n\nOutput Variables:",
			"item": [
				{
					"name": "Create Tenant User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"name\",",
									"            \"value\":environment.iwf_tenant_username",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);"
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/mgmt/shared/authz/users",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{iwf_tenant_username}}\",\n\t\"displayName\": \"{{iwf_tenant_username}}\",\n\t\"password\": \"{{iwf_tenant_password}}\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Assign User to Tenat Admin Role",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"userReferences.0.link\",",
									"            \"value\":\"https://localhost/mgmt/shared/authz/users/\"+environment.iwf_tenant_username",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);",
									""
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/{{iwf_tenant_roleref}}",
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userReferences\": [\n\t\t{\n\t\t\t\"link\": \"https://localhost/mgmt/shared/authz/users/{{iwf_tenant_username}}\"\n\t\t}\n\t]\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "4C_Delete_Tenant_User",
			"description": "Delete a iWorkflow Tenant User\n\nInput Variables:\niwf_tenant_username\t\tTenant Username\n\nOutput Variables:\n",
			"item": [
				{
					"name": "Delete a Tenant User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"name\",",
									"            \"value\":environment.iwf_tenant_username",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);"
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/mgmt/shared/authz/users/{{iwf_tenant_username}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "5A_Create_iApp_Template",
			"description": "Create an iApp template on iWorkflow\n\nInput Variables:\niwf_iapp_name\t\tName of the iApp Template\niwf_iapp_template\tThe JSON body of the template\n\nOutput Variables:\n",
			"item": [
				{
					"name": "Install iApp Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        {",
									"            \"path\":\"name\",",
									"            \"value\":\"/\" + environment.iwf_iapp_name + \".*/i\",",
									"            \"op\":\"regex\"",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);"
								]
							}
						}
					],
					"request": {
						"url": " https://{{iwf_mgmt}}/mgmt/cm/cloud/templates/iapp",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{iwf_iapp_template}}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "5B_Delete_iApp_Template",
			"description": "Delete an iApp template on iWorkflow\n\nInput Variables:\niwf_iapp_name\t\tName of the iApp Template\n\nOutput Variables:\n",
			"item": [
				{
					"name": "Delete iApp Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"name\",",
									"            \"value\":environment.iwf_iapp_name",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);"
								]
							}
						}
					],
					"request": {
						"url": " https://{{iwf_mgmt}}/mgmt/cm/cloud/templates/iapp/{{iwf_iapp_name}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "6A_Create_Service_Template",
			"description": "Create a Service Template on iWorkflow\n\nInput Variables:\niwf_service_name\t\tName of the Service Template\niwf_service_template\tThe JSON body of the template\n\nOutput Variables:\n",
			"item": [
				{
					"name": "Create Service Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        {",
									"            \"path\":\"name\",",
									"            \"value\":\"/\" + environment.iwf_service_name + \".*/i\",",
									"            \"op\":\"regex\"",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);"
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/mgmt/cm/cloud/provider/templates/iapp",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{iwf_service_template}}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "6B_Delete_Service_Template",
			"description": "Delete a Service Template on iWorkflow\n\nInput Variables:\niwf_service_name\t\tName of Service Template\n\nOutput Variables:\n",
			"item": [
				{
					"name": "Delete Service Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"templateName\",",
									"            \"value\":environment.iwf_service_name",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if(Array.isArray(environment.iwf_service_name_array) && environment.iwf_service_name_array.length > 0) {",
									"    var iwf_service_name = environment.iwf_service_name_array.pop()",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/mgmt/cm/cloud/provider/templates/iapp/{{iwf_service_name}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "6C_Check_Service_Template_Existence",
			"description": "",
			"item": [
				{
					"name": "Get Service Template Existance",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var populate_vars = [",
									"        {name:\"iwf_services_templates\", value:\"items\"}",
									"    ];",
									"    ",
									"f5_populate_env_vars(populate_vars);"
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/mgmt/cm/cloud/provider/templates/iapp",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "7A_Delete_Instance_iApp",
			"description": "",
			"item": [
				{
					"name": "Delete instance iApp",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"f5_check_response();"
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/mgmt/cm/cloud/tenants/{{iwf_tenant_name}}/services/iapp/{{iwf_service_name}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "7B_Get_Instance_iApp",
			"description": "",
			"item": [
				{
					"name": "Get Instances of iApps",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"f5_check_response();"
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/mgmt/cm/cloud/tenants/{{iwf_tenant_name}}/services/iapp",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "8A_Special_Remove_All_Instances_iApp",
			"description": "",
			"item": [
				{
					"name": "Get Tenants",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var find_all_tenants = function(resp) {",
									"    var iwf_tenants_to_check = [];",
									"    resp.items.forEach(function(item){",
									"        iwf_tenants_to_check.push(item.name);",
									"    });",
									"    return iwf_tenants_to_check;",
									"};",
									"",
									"environment.iwf_tenants_to_check = undefined;",
									"",
									"var populate_vars = [",
									"        {",
									"            name:\"iwf_tenants_to_check\",",
									"            value:find_all_tenants",
									"        }",
									"    ];",
									"    ",
									"f5_populate_env_vars(populate_vars);",
									"",
									"if (typeof environment.iwf_tenants_to_check === 'undefined' || !environment.iwf_tenants_to_check){",
									"    for (test in tests){",
									"        tests[test] = true;",
									"    }",
									"    postman.setNextRequest(null);",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/mgmt/cm/cloud/tenants",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Instances of iApps",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var find_all_instances_of_iapps = function(resp) {",
									"    var iwf_instances_of_iapps = [];",
									"    resp.items.forEach(function(item){",
									"        iwf_instances_of_iapps.push(item.name);",
									"    });",
									"    return iwf_instances_of_iapps;",
									"};",
									"",
									"environment.iwf_instances_of_iapps = undefined;",
									"",
									"var populate_vars = [",
									"        {",
									"            name:\"iwf_instances_of_iapps\",",
									"            value:find_all_instances_of_iapps",
									"        }",
									"    ];",
									"    ",
									"f5_populate_env_vars(populate_vars);",
									"",
									"if (typeof environment.iwf_instances_of_iapps === 'undefined' || !environment.iwf_instances_of_iapps){",
									"    for (test in tests){",
									"        tests[test] = true;",
									"    }",
									"    if (environment.iwf_tenants_to_check && environment.iwf_tenants_to_check > 0) {",
									"        postman.setNextRequest(\"Get Instances of iApps\");",
									"    }else {",
									"        postman.setNextRequest(null);",
									"    }",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var workingArray = environment.iwf_tenants_to_check;",
									"",
									"if(typeof workingArray === \"string\") {",
									"    workingArray = workingArray.split(',');",
									"}",
									"    ",
									"if(Array.isArray(workingArray) && workingArray.length > 0) {",
									"    postman.setEnvironmentVariable(\"iwf_tenant_name\",workingArray.pop());",
									"    postman.setEnvironmentVariable(\"iwf_tenants_to_check\",workingArray);",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/mgmt/cm/cloud/tenants/{{iwf_tenant_name}}/services/iapp",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Tenant rolesref",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var fixup_ref = function(resp) {",
									"    return resp.roleReference.link.replace('https://localhost','');",
									"}",
									"",
									"var populate_vars = [",
									"        {",
									"            name:\"iwf_tenant_roleref\",",
									"            value:fixup_ref",
									"        }",
									"    ];",
									"    ",
									"f5_populate_env_vars(populate_vars);"
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/mgmt/cm/cloud/tenants/{{iwf_tenant_name}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get username from rolesref",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var get_username = function(resp) {",
									"    return resp.userReferences[0].link.replace('https://localhost/mgmt/shared/authz/users/','');",
									"}",
									"",
									"var populate_vars = [",
									"        {",
									"            name:\"iwf_tenant_username_tmp\",",
									"            value:get_username",
									"        }",
									"    ];",
									"    ",
									"f5_populate_env_vars(populate_vars);",
									""
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/{{iwf_tenant_roleref}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userReferences\": [\n\t\t{\n\t\t\t\"link\": \"https://localhost/mgmt/shared/authz/users/{{iwf_tenant_username}}\"\n\t\t}\n\t]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Authenticate and Obtain Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var populate_vars = [",
									"        {name:\"iwf_token_temp\", value:\"token.token\"}",
									"    ];",
									"    ",
									"f5_populate_env_vars(populate_vars);",
									""
								]
							}
						}
					],
					"request": {
						"url": " https://{{iwf_mgmt}}/mgmt/shared/authn/login",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": {{iwf_tenant_username_tmp}},\n  \"password\": {{iwf_tenant_password}},\n  \"loginProvidername\":\"tmos\"\n}\n"
						},
						"description": "Perform authentication and populate the variable iwf_token"
					},
					"response": []
				},
				{
					"name": "Delete instance iApp",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"f5_check_response();",
									"",
									"if(environment.iwf_instances_of_iapps && environment.iwf_instances_of_iapps.length > 0){",
									"    postman.setNextRequest(\"Delete instance iApp\");",
									"}else if(environment.iwf_tenants_to_check && iwf_tenants_to_check.length > 0){",
									"    postman.setNextRequest(\"Get Instances of iApps\");",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var workingArray = environment.iwf_instances_of_iapps;",
									"",
									"if(typeof workingArray === \"string\") {",
									"    workingArray = workingArray.split(',');",
									"}",
									"    ",
									"if(Array.isArray(workingArray) && workingArray.length > 0) {",
									"    postman.setEnvironmentVariable(\"iwf_service_name\",workingArray.pop());",
									"    postman.setEnvironmentVariable(\"iwf_instances_of_iapps\",workingArray);",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/mgmt/cm/cloud/tenants/{{iwf_tenant_name}}/services/iapp/{{iwf_service_name}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token_temp}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "8B_Special_Remove_All_Services_Templates",
			"description": "",
			"item": [
				{
					"name": "Get Service Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var find_all_service_templates = function(resp) {",
									"    var services_templates = [];",
									"    resp.items.forEach(function(item){",
									"        services_templates.push(item.templateName);",
									"    });",
									"    return services_templates;",
									"};",
									"",
									"iwf_service_name_array = undefined;",
									"",
									"var populate_vars = [",
									"        {",
									"            name:\"iwf_service_name_array\",",
									"            value:find_all_service_templates",
									"        }",
									"    ];",
									"    ",
									"f5_populate_env_vars(populate_vars);",
									"",
									"if (typeof environment.iwf_service_name_array === 'undefined' || !environment.iwf_service_name_array){",
									"    for (test in tests){",
									"        tests[test] = true;",
									"    }",
									"    postman.setNextRequest(null);",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// Build filter",
									"var filter = [];",
									"",
									"var filterInput = environment.filter_service_templates;",
									"",
									"if(typeof filterInput !== 'undefined' && filterInput.length > 0) {",
									"    if(typeof filterInput === \"string\") {",
									"        filterInput = filterInput.split(',');",
									"    }",
									"    filterInput.forEach(function(filterItem){",
									"        filter.push(\"(templateName eq '\" + filterItem + \"')\");",
									"    });",
									"}",
									"",
									"if (Array.isArray(filter) && filter.length > 0) {",
									"    postman.setEnvironmentVariable(\"_rt_filter\", \"?$filter=\" + encodeURIComponent(filter.join(\" or \")));",
									"} else {",
									"    postman.setEnvironmentVariable(\"_rt_filter\", \"\");",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/mgmt/cm/cloud/provider/templates/iapp{{_rt_filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete Service Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"templateName\",",
									"            \"value\":environment.iwf_service_name",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);",
									"",
									"if(environment.iwf_service_name_array && environment.iwf_service_name_array.length > 0){",
									"    postman.setNextRequest(\"Delete Service Template\");",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var workingArray = environment.iwf_service_name_array;",
									"",
									"if(typeof workingArray === \"string\") {",
									"    workingArray = workingArray.split(',');",
									"}",
									"    ",
									"if(Array.isArray(workingArray) && workingArray.length > 0) {",
									"    postman.setEnvironmentVariable(\"iwf_service_name\",workingArray.pop());",
									"    postman.setEnvironmentVariable(\"iwf_service_name_array\",workingArray);",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/mgmt/cm/cloud/provider/templates/iapp/{{iwf_service_name}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "8C_Special_Remove_iApp_Template",
			"description": "",
			"item": [
				{
					"name": "Get iApp Template from IWF",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var find_all_iapps_templates = function(resp) {",
									"    var iwf_iapps_templates = [];",
									"    resp.items.forEach(function(item){",
									"        iwf_iapps_templates.push(item.name);",
									"    });",
									"    return iwf_iapps_templates;",
									"};",
									"",
									"var populate_vars = [",
									"        {",
									"            name:\"iwf_iapps_templates\",",
									"            value:find_all_iapps_templates",
									"        }",
									"    ];",
									"    ",
									"f5_populate_env_vars(populate_vars);",
									"",
									"if (typeof environment.iwf_iapps_templates === 'undefined' || !environment.iwf_iapps_templates){",
									"    for (test in tests){",
									"        tests[test] = true;",
									"    }",
									"    postman.setNextRequest(null);",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// Build filter",
									"var filter = [];",
									"",
									"var filterInput = environment.filter_iapp_templates;",
									"",
									"if(typeof filterInput !== 'undefined' && filterInput.length > 0) {",
									"    if(typeof filterInput === \"string\") {",
									"        filterInput = filterInput.split(',');",
									"    }",
									"    filterInput.forEach(function(filterItem){",
									"        filter.push(\"(name eq '\" + filterItem + \"')\");",
									"    });",
									"}",
									"",
									"if (Array.isArray(filter) && filter.length > 0) {",
									"    postman.setEnvironmentVariable(\"_rt_filter\", \"?$filter=\" + encodeURIComponent(filter.join(\" or \")));",
									"} else {",
									"    postman.setEnvironmentVariable(\"_rt_filter\", \"\");",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/mgmt/cm/cloud/templates/iapp{{_rt_filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete iApp Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"name\",",
									"            \"value\":environment.iwf_iapp_name",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);",
									"",
									"if(environment.iwf_iapps_templates && environment.iwf_iapps_templates.length > 0){",
									"    postman.setNextRequest(\"Delete iApp Template\");",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var workingArray = environment.iwf_iapps_templates;",
									"",
									"if(typeof workingArray === \"string\") {",
									"    workingArray = workingArray.split(',');",
									"}",
									"    ",
									"if(Array.isArray(workingArray) && workingArray.length > 0) {",
									"    postman.setEnvironmentVariable(\"iwf_iapp_name\",workingArray.pop());",
									"    postman.setEnvironmentVariable(\"iwf_iapps_templates\",workingArray);",
									"}"
								]
							}
						}
					],
					"request": {
						"url": " https://{{iwf_mgmt}}/mgmt/cm/cloud/templates/iapp/{{iwf_iapp_name}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "8D_Special_Remove_Discovered_BIG-IP",
			"description": "",
			"item": [
				{
					"name": "Get BIG-IP UUID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var find_all_service_templates = function(resp) {",
									"    var discovered_bigips = [];",
									"    resp.items.forEach(function(item){",
									"        discovered_bigips.push(item.uuid);",
									"    });",
									"    return discovered_bigips;",
									"};",
									"",
									"environment.iwf_bigip_uuid = undefined;",
									"",
									"var populate_vars = [",
									"        {",
									"            name:\"iwf_bigip_uuids\",",
									"            value:\"items.0.uuid\"",
									"        }",
									"    ];",
									"    ",
									"f5_populate_env_vars(populate_vars);",
									"",
									"if (typeof environment.iwf_bigip_uuids === 'undefined' || !environment.iwf_bigip_uuids){",
									"    for (test in tests){",
									"        tests[test] = true;",
									"    }",
									"    postman.setNextRequest(null);",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// Build filter",
									"var filter = [];",
									"",
									"var filterInput = environment.filter_discovered_bigips;",
									"",
									"if(typeof filterInput !== 'undefined' && filterInput.length > 0) {",
									"    if(typeof filterInput === \"string\") {",
									"        filterInput = filterInput.split(',');",
									"    }",
									"    filterInput.forEach(function(filterItem){",
									"        filter.push(\"(address eq '\" + filterItem + \"')\");",
									"    });",
									"}",
									"",
									"if (Array.isArray(filter) && filter.length > 0) {",
									"    postman.setEnvironmentVariable(\"_rt_filter\", \"?$filter=\" + encodeURIComponent(filter.join(\" or \")));",
									"} else {",
									"    postman.setEnvironmentVariable(\"_rt_filter\", \"\");",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/mgmt/shared/resolver/device-groups/cm-cloud-managed-devices/devices{{_rt_filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Remove  BIG-IP from iWorkflow",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"uuid\",",
									"            \"value\":environment.iwf_bigip_uuid",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);",
									"",
									"if(environment.iwf_bigip_uuids && environment.iwf_bigip_uuids.length > 0){",
									"    postman.setNextRequest(\"Remove  BIG-IP from iWorkflow\");",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var workingArray = environment.iwf_bigip_uuids;",
									"",
									"if(typeof workingArray === \"string\") {",
									"    workingArray = workingArray.split(',');",
									"}",
									"    ",
									"if(Array.isArray(workingArray) && workingArray.length > 0) {",
									"    postman.setEnvironmentVariable(\"iwf_bigip_uuid\",workingArray.pop());",
									"    postman.setEnvironmentVariable(\"iwf_bigip_uuids\",workingArray);",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/mgmt/shared/resolver/device-groups/cm-cloud-managed-devices/devices/{{iwf_bigip_uuid}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "8E_Special_Remove_Connector",
			"description": "",
			"item": [
				{
					"name": "Get BIG-IP connector UUID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var find_all_connectors_uuids = function(resp) {",
									"    var iwf_connector_uuids = [];",
									"    var filter = environment.filter_iwf_connectors;",
									"    if(typeof filter === \"string\") {",
									"        filter = filter.split(',');",
									"    }",
									"    if (typeof filter !== 'undefined') {",
									"        resp.items.forEach(function(item){",
									"            this.item = item;",
									"            var self = this;",
									"            filter.forEach(function(filter){",
									"                if(self.item.name === filter){",
									"                    iwf_connector_uuids.push(self.item.connectorId);",
									"                }",
									"            });",
									"        });",
									"    }",
									"    return iwf_connector_uuids;",
									"};",
									"",
									"environment.iwf_connector_uuids = undefined;",
									"",
									"var populate_vars = [",
									"        {",
									"            name:\"iwf_connector_uuids\",",
									"            value:find_all_connectors_uuids",
									"        }",
									"    ];",
									"    ",
									"f5_populate_env_vars(populate_vars);",
									"",
									"if (typeof environment.iwf_connector_uuids === 'undefined' || !environment.iwf_connector_uuids){",
									"    for (test in tests){",
									"        tests[test] = true;",
									"    }",
									"    postman.setNextRequest(null);",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/mgmt/cm/cloud/connectors/local",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete a BIG-IP Connector",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"connectorId\",",
									"            \"value\":environment.iwf_connector_uuid",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);",
									"",
									"if(environment.iwf_connector_uuids && environment.iwf_connector_uuids.length > 0){",
									"    postman.setNextRequest(\"Delete a BIG-IP Connector\");",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var workingArray = environment.iwf_connector_uuids;",
									"",
									"if(typeof workingArray === \"string\") {",
									"    workingArray = workingArray.split(',');",
									"}",
									"",
									"if(Array.isArray(workingArray) && workingArray.length > 0) {",
									"    postman.setEnvironmentVariable(\"iwf_connector_uuid\",workingArray.pop());",
									"    postman.setEnvironmentVariable(\"iwf_connector_uuids\",workingArray);",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/mgmt/cm/cloud/connectors/local/{{iwf_connector_uuid}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "8F_Special_Delete_Tenant_User",
			"description": "",
			"item": [
				{
					"name": "Get users",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var find_all_tenants_users = function(resp) {",
									"    var iwf_tenant_usernames = [];",
									"    resp.items.forEach(function(item){",
									"        iwf_tenant_usernames.push(item.name);",
									"    });",
									"    return iwf_tenant_usernames;",
									"};",
									"",
									"environment.iwf_tenant_usernames = undefined;",
									"",
									"var populate_vars = [",
									"        {",
									"            name:\"iwf_tenant_usernames\",",
									"            value:find_all_tenants_users",
									"        }",
									"    ];",
									"    ",
									"f5_populate_env_vars(populate_vars);",
									"",
									"if (typeof environment.iwf_tenant_usernames === 'undefined' || !environment.iwf_tenant_usernames){",
									"    for (test in tests){",
									"        tests[test] = true;",
									"    }",
									"    postman.setNextRequest(null);",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// Build filter",
									"var filter = [];",
									"",
									"var filterInput = environment.filter_iwf_tenant_usernames;",
									"",
									"if(typeof filterInput !== 'undefined' && filterInput.length > 0) {",
									"    if(typeof filterInput === \"string\") {",
									"        filterInput = filterInput.split(',');",
									"    }",
									"    filterInput.forEach(function(filterItem){",
									"        filter.push(\"(name eq '\" + filterItem + \"')\");",
									"    });",
									"}",
									"",
									"if (Array.isArray(filter) && filter.length > 0) {",
									"    postman.setEnvironmentVariable(\"_rt_filter\", \"?$filter=\" + encodeURIComponent(filter.join(\" or \")));",
									"} else {",
									"    postman.setEnvironmentVariable(\"_rt_filter\", \"\");",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/mgmt/shared/authz/users{{_rt_filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete a Tenant User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"name\",",
									"            \"value\":environment.iwf_tenant_username",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);",
									"",
									"if(environment.iwf_tenant_usernames && environment.iwf_tenant_usernames.length > 0){",
									"    postman.setNextRequest(\"Delete a BIG-IP Connector\");",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var workingArray = environment.iwf_tenant_usernames;",
									"",
									"if(typeof workingArray === \"string\") {",
									"    workingArray = workingArray.split(',');",
									"}",
									"    ",
									"if(Array.isArray(workingArray) && workingArray.length > 0) {",
									"    postman.setEnvironmentVariable(\"iwf_delete_tenant_username\",workingArray.pop());",
									"    postman.setEnvironmentVariable(\"iwf_tenant_usernames\",workingArray);",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/mgmt/shared/authz/users/{{iwf_delete_tenant_username}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "8G_Special_Remove_Tenant",
			"description": "",
			"item": [
				{
					"name": "Get tenant",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var find_all_tenants = function(resp) {",
									"    var iwf_tenants_to_delete = [];",
									"    resp.items.forEach(function(item){",
									"        iwf_tenants_to_delete.push(item.name);",
									"    });",
									"    return iwf_tenants_to_delete;",
									"};",
									"",
									"environment.iwf_tenants_to_delete = undefined;",
									"",
									"var populate_vars = [",
									"        {",
									"            name:\"iwf_tenants_to_delete\",",
									"            value:find_all_tenants",
									"        }",
									"    ];",
									"    ",
									"f5_populate_env_vars(populate_vars);",
									"",
									"if (typeof environment.iwf_tenants_to_delete === 'undefined' || !environment.iwf_tenants_to_delete){",
									"    for (test in tests){",
									"        tests[test] = true;",
									"    }",
									"    postman.setNextRequest(null);",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// Build filter",
									"var filter = [];",
									"",
									"var filterInput = environment.filter_iwf_tenant_names;",
									"",
									"if(typeof filterInput !== 'undefined' && filterInput.length > 0) {",
									"    if(typeof filterInput === \"string\") {",
									"        filterInput = filterInput.split(',');",
									"    }",
									"    filterInput.forEach(function(filterItem){",
									"        filter.push(\"(name eq '\" + filterItem + \"')\");",
									"    });",
									"}",
									"",
									"if (Array.isArray(filter) && filter.length > 0) {",
									"    postman.setEnvironmentVariable(\"_rt_filter\", \"?$filter=\" + encodeURIComponent(filter.join(\" or \")));",
									"} else {",
									"    postman.setEnvironmentVariable(\"_rt_filter\", \"\");",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/mgmt/cm/cloud/tenants{{_rt_filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete iWorkflow Tenant",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"name\",",
									"            \"value\":environment.iwf_tenant_name",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);",
									"",
									"if(environment.iwf_tenants_to_delete && environment.iwf_tenants_to_delete.length > 0){",
									"    postman.setNextRequest(\"Delete iWorkflow Tenant\");",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var workingArray = environment.iwf_tenants_to_delete;",
									"",
									"if(typeof workingArray === \"string\") {",
									"    workingArray = workingArray.split(',');",
									"}",
									"    ",
									"if(Array.isArray(workingArray) && workingArray.length > 0) {",
									"    postman.setEnvironmentVariable(\"iwf_tenant_name\",workingArray.pop());",
									"    postman.setEnvironmentVariable(\"iwf_tenants_to_delete\",workingArray);",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "https://{{iwf_mgmt}}/mgmt/cm/cloud/tenants/{{iwf_tenant_name}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		}
	]
}